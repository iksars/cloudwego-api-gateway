// Code generated by hertz generator.

package layer

import (
	layer "cloudwego-api-gateway/pkg/API-Layer/biz/model/api/layer"
	routing "cloudwego-api-gateway/pkg/routing"
	"context"
	"fmt"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/common/adaptor"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	"github.com/cloudwego/kitex/pkg/generic"
)

var routingHandler routing.RouteHandler = routing.NewDefaultRouteHandler()

// GateWayMethod .
// @router /agw [POST]
func GateWayMethod(ctx context.Context, c *app.RequestContext) {
	var err error
	var req layer.LayReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	fmt.Println(req.ServiceName)
	fmt.Println(req.ServiceMethod)
	fmt.Println(c.Body())

	//这里调用routing层的RoutingDistribute方法
	cli := routingHandler.RoutingDistribute(req.ServiceName)

	httpReq, err := adaptor.GetCompatRequest(c.GetRequest())
	if err != nil {
		panic("get http req failed")
	}
	customReq, err := generic.FromHTTPRequest(httpReq)
	if err != nil {
		panic("get custom req failed")
	}

	resp, err := cli.GenericCall(ctx, req.ServiceMethod, customReq)
	c.JSON(consts.StatusOK, resp)
}
